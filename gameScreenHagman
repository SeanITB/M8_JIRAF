package com.example.hagmanapp

import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.ExperimentalLayoutApi
import androidx.compose.foundation.layout.FlowRow
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.width
import androidx.compose.material3.Button
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.Text
import androidx.compose.material3.TextField
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import androidx.navigation.NavHostController

@OptIn(ExperimentalMaterial3Api::class, ExperimentalLayoutApi::class)
@Composable
fun GameScreen(navigationController: NavHostController, dificultad: String?) {
    var dificultadText by remember { mutableStateOf("") }
    var lletraUsuari by remember { mutableStateOf("") }
    var lletreSelecionades by remember { mutableStateOf(arrayOf("")) }
    var comprovar by remember { mutableStateOf(false) }
    var esCorrecte by remember { mutableStateOf(false) }
    var index by remember { mutableStateOf(-1) }
    val arrIntent: Array<Int> = arrayOf(6, 7, 9)
    var numIntents by remember { mutableStateOf(0) }
    var dificultadInt by remember { mutableStateOf(0) }
    val abcCatalan = arrayOf(
        "a", "b", "c", "d", "e", "f", "g", "h", "i",
        "j", "k", "l", "m", "n", "o", "p", "q", "r",
        "s", "t", "u", "v", "w", "x", "y", "z", "รง"
    )
    var arrParaulesAleatories: Array<Array<String>> = arrayOf(
        arrayOf(
            "Luna", "Sola", "Mesa", "Vale", "Flor",
            "Hola", "Mari", "Pato", "Ciel", "Rial",
            "Hiel", "Tren", "Piel", "Neon", "Azul",
            "Solo", "Peso", "Fino", "Lago", "Rama",
            "Pino", "Rata", "Nudo", "Polo", "Cala",
            "Nube", "Fosa", "Polo", "Cuna", "Pila"
        ),
        arrayOf(
            "gatet", "goset", "fulla", "cotxe",
            "lluna", "taula", "aigua", "solar",
            "arbre", "riuet", "porta", "finca",
            "color", "groga", "volar", "tenir",
            "deman", "llengua", "cotxe", "llibre",
            "marxa", "pluja", "doble", "fusta",
            "tarda", "tenda", "tenir", "tarro",
            "volar", "vista", "venda", "vitge",
            "estar"
        ),
        arrayOf(
            "Palabra", "Escuela", "Trabajo", "Vestido",
            "Sardina", "Cancion", "Lapizes", "Guitarra",
            "Perrito", "Galleta", "Familia", "Ventana",
            "Relojes", "Manzana", "Teclado", "Zapato",
            "Cocinas", "Medalla", "Deporte",
        )
    )
    //Crear paraula aleatoria
    if (lletreSelecionades.size == 1) {
        /*
        if (dificultad.equals("Easy")) {
            lletreSelecionades = arrayOf("_", "_", "_", "_")
        } else if (dificultad.equals("Medium")) {
            lletreSelecionades = arrayOf("_", "_", "_", "_", "_")
        } else {
            lletreSelecionades = arrayOf("_", "_", "_", "_", "_", "_", "_")
        }

         */
        when (dificultad) {
            "Easy" -> {
                dificultadText = "Mode facil"
                lletreSelecionades = arrayOf("_", "_", "_", "_")
                dificultadInt = 0
                numIntents = arrIntent[dificultadInt]
            }
            "Medium" -> {
                dificultadText = "Mode mitg"
                lletreSelecionades = arrayOf("_", "_", "_", "_", "_")
                dificultadInt = 1
                numIntents = arrIntent[dificultadInt]
            }
            "Hard" -> {
                dificultadText = "Mode dificil"
                lletreSelecionades = arrayOf("_", "_", "_", "_", "_", "_", "_")
                dificultadInt = 2
                numIntents = arrIntent[dificultadInt]
            }
            else -> dificultadText = "NO dificultad selecionada"
        }
    }
    val paraulaAleatoria by remember { mutableStateOf(arrParaulesAleatories[dificultadInt].random()) }
    Column(
        modifier = Modifier.fillMaxSize(),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center
    ) {
        Text(text = dificultadText)
        Text(text = paraulaAleatoria)
        Row(
            modifier = Modifier
                .width(130.dp),
            horizontalArrangement = Arrangement.SpaceBetween
        ) {
            lletreSelecionades.indices.forEach { parcela ->
                Text(text = lletreSelecionades[parcela])
            }
        }    
        TextField(
            value = lletraUsuari,
            onValueChange = { lletraUsuari = it },
            label = { Text(text = "Lletra") }
        )
        Button(onClick = { comprovar = true }) {
            Text(text = "Comprova!")
        }
        Text(text = "ATTEMPTS: $numIntents")
        if ("_" in lletreSelecionades || numIntents == 0) {
            if (comprovar == true) {
                if (lletraUsuari in paraulaAleatoria.lowercase())
                    esCorrecte = true // Comproba si esxisteix la lletra en la random paraula
                else
                    comprovar = false
                if (esCorrecte == true) {
                    //Trobar les posicions de les lletres
                    val indexosList: MutableList<Int> = mutableListOf()
                    do {
                        index = paraulaAleatoria.lowercase().indexOf(lletraUsuari, index + 1)
                        if (index != -1) {
                            indexosList.add(index)
                        }
                    } while (index != -1)

                    //Mostrar les lletres
                    for (pos in indexosList.indices) {
                        lletreSelecionades[indexosList[pos]] = lletraUsuari
                    }
                    comprovar = false
                    numIntents--
                }
                lletraUsuari = ""
            }
        } else {
            numIntents = arrIntent[dificultadInt] - numIntents
            navigationController.navigate(
                Routes.ResultScreen.createRouteToResult(
                    dificultad = dificultad.toString(),
                    numIntents = numIntents
                )
            )
        }
    }
}
